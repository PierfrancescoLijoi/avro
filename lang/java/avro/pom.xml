<?xml version="1.0" encoding="UTF-8"?>
<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>avro-parent</artifactId>
    <groupId>org.apache.avro</groupId>
    <version>1.12.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>avro</artifactId>
  <name>Apache Avro</name>
  <url>https://avro.apache.org</url>
  <description>Avro core components</description>
  <packaging>bundle</packaging>

  <properties>
    <main.basedir>${project.parent.parent.basedir}</main.basedir>
    <osgi.import>
      !org.apache.avro*,
      com.fasterxml.jackson*,
      org.xerial.snappy;resolution:=optional,
      sun.misc;resolution:=optional,
      *
    </osgi.import>
    <osgi.export>org.apache.avro*;version="${project.version}"</osgi.export>

    <!-- Dependencies Versions -->
    <mockito.version>5.11.0</mockito.version>
    <ba-dua.version>0.6.0</ba-dua.version>
    <pitest.version>1.15.0</pitest.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>../../../share/schemas</directory>
        <includes>
          <include>org/apache/avro/data/Json.avsc</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>../../../share/</directory>
        <includes>
          <include>schemas/**</include>
          <include>test/**</include>
        </includes>
        <targetPath>share/</targetPath>
      </testResource>
    </testResources>

    <plugins>
      <!-- Maven Jar Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Automatic-Module-Name>org.apache.avro</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- Maven Surefire Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <parallel>none</parallel>
          <argLine>
            --add-opens java.base/java.lang=ALL-UNNAMED
            --add-opens java.base/jdk.internal.reflect=ALL-UNNAMED
            --add-opens java.base/sun.nio.ch=ALL-UNNAMED
          </argLine>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <dependencies>
    <!-- Jackson Dependencies -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <!-- Commons Compress -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
    </dependency>
    <!-- Snappy -->
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- XZ -->
    <dependency>
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Zstd -->
    <dependency>
      <groupId>com.github.luben</groupId>
      <artifactId>zstd-jni</artifactId>
      <optional>true</optional>
    </dependency>
    <!-- Hamcrest -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
    </dependency>
  </dependencies>

  <profiles>
    <!-- Ba-Dua Profile -->
    <profile>
      <id>BaDua</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <argLine>
          --add-opens java.base/java.lang=ALL-UNNAMED
          --add-opens java.base/java.util=ALL-UNNAMED
          --add-opens java.base/sun.nio.ch=ALL-UNNAMED
          --add-opens java.base/jdk.internal.reflect=ALL-UNNAMED
          -javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar
          -Doutput.file=target/badua.ser
        </argLine>
      </properties>
      <dependencies>
        <dependency>
          <groupId>br.usp.each.saeg</groupId>
          <artifactId>ba-dua-cli</artifactId>
          <version>${ba-dua.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.10</version>
            <executions>
              <execution>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>br.usp.each.saeg</groupId>
                      <artifactId>ba-dua-agent-rt</artifactId>
                      <classifier>all</classifier>
                      <version>${ba-dua.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.5.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>
                  <arguments>
                    <argument>-input</argument>
                    <argument>${project.build.directory}/badua.ser</argument>
                    <argument>-classes</argument>
                    <argument>${project.build.outputDirectory}</argument>
                    <argument>-show-classes</argument>
                    <argument>-show-methods</argument>
                    <argument>-xml</argument>
                    <argument>${project.build.directory}/badua.xml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- PIT Profile -->
    <profile>
      <id>Pitest</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <withHistory>true</withHistory>
        <pitest.history.file>${project.build.directory}/pitest.history</pitest.history.file>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest.version}</version>
            <configuration>
              <targetClasses>

              </targetClasses>
              <targetTests>

              </targetTests>
              <avoidCallsTo>
                <avoidCallsTo>org.slf4j</avoidCallsTo>
              </avoidCallsTo>
              <historyInputFile>${pitest.history.file}</historyInputFile>
              <historyOutputFile>${pitest.history.file}</historyOutputFile>
            </configuration>
            <executions>
              <execution>
                <id>PIT Report Generation</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
