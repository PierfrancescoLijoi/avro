<?xml version="1.0" encoding="UTF-8"?>
<!--
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       https://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<project
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
    xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>avro-parent</artifactId>
    <groupId>org.apache.avro</groupId>
    <version>1.12.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>avro</artifactId>

  <name>Apache Avro</name>
  <url>https://avro.apache.org</url>
  <description>Avro core components</description>
  <packaging>bundle</packaging>

  <properties>
    <main.basedir>${project.parent.parent.basedir}</main.basedir>
    <osgi.import>
      !org.apache.avro*,
      com.fasterxml.jackson*,
      org.xerial.snappy;resolution:=optional,
      sun.misc;resolution:=optional,
      *
    </osgi.import>
    <osgi.export>org.apache.avro*;version="${project.version}"</osgi.export>

    <!-- Badua properties -->
    <ba-dua.version>0.6.0</ba-dua.version>
    <pitest.version>1.15.0</pitest.version>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>../../../share/schemas</directory>
        <includes>
          <include>org/apache/avro/data/Json.avsc</include>
        </includes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
      </testResource>
      <testResource>
        <directory>../../../share/</directory>
        <includes>
          <include>schemas/**</include>
          <include>test/**</include>
        </includes>
        <targetPath>share/</targetPath>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Automatic-Module-Name>org.apache.avro</Automatic-Module-Name>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <parallel>none</parallel>
        </configuration>
        <executions>
          <execution>
            <id>test-with-custom-coders</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <org.apache.avro.specific.use_custom_coders>true</org.apache.avro.specific.use_custom_coders>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>test-with-fast-reader</id>
            <phase>test</phase>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <org.apache.avro.fastread>true</org.apache.avro.fastread>
              </systemPropertyVariables>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>


  <dependencies>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-compress</artifactId>
    </dependency>
    <dependency>
      <groupId>org.xerial.snappy</groupId>
      <artifactId>snappy-java</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.tukaani</groupId>
      <artifactId>xz</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.github.luben</groupId>
      <artifactId>zstd-jni</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
    </dependency>
  </dependencies>

  <profiles>

    <!-- Ba-dua profile isw2-->
    <!--profile>
       <id>BaDua</id>
       <activation>
         <activeByDefault>false</activeByDefault>
       </activation>
       <properties>
         <argLine>-javaagent:/target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar -Doutput.file=target/badua.ser</argLine>
       </properties>
       <dependencies>
         <dependency>
           <groupId>br.usp.each.saeg</groupId>
           <artifactId>ba-dua-cli</artifactId>
           <version>${ba-dua.version}</version>
         </dependency>
       </dependencies>
       <build>
         <plugins>
           <plugin>
             <groupId>org.apache.maven.plugins</groupId>
             <artifactId>maven-dependency-plugin</artifactId>
             <version>2.10</version>
             <executions>
               <execution>
                 <goals>
                   <goal>copy</goal>
                 </goals>
                 <configuration>
                   <artifactItems>
                     <artifactItem>
                       <groupId>br.usp.each.saeg</groupId>
                       <artifactId>ba-dua-agent-rt</artifactId>
                       <classifier>all</classifier>
                       <version>${ba-dua.version}</version>
                     </artifactItem>
                   </artifactItems>
                 </configuration>
               </execution>
             </executions>
           </plugin>
           <plugin>
             <groupId>org.codehaus.mojo</groupId>
             <artifactId>exec-maven-plugin</artifactId>
             <version>1.5.0</version>
             <executions>
               <execution>
                 <goals>
                   <goal>java</goal>
                 </goals>
                 <phase>verify</phase>
                 <configuration>
                   <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>
                   <arguments>
                     <argument>-input</argument>
                     <argument>${project.build.directory}/badua.ser</argument>
                     <argument>-classes</argument>
                     <argument>${project.build.outputDirectory}</argument>
                     <argument>-show-classes</argument>
                     <argument>-show-methods</argument>
                     <argument>-xml</argument>
                     <argument>${project.build.directory}/badua.xml</argument>
                   </arguments>
                 </configuration>
               </execution>
             </executions>
           </plugin>
         </plugins>
       </build>
     </profile-->


    <!-- BADUA PROFILE precedente alla modifica per problema su badua sul test specifico lookup  -->
    <!--<profile>-->
    <!--  <id>BaDua</id>-->
    <!--  <activation>-->
    <!--    <activeByDefault>false</activeByDefault>-->
    <!--  </activation>-->
    <!--  &lt;!&ndash;-->
    <!--  <properties>-->
    <!--    <argLine>-javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar -Doutput.file=target/badua.ser</argLine>-->
    <!--  </properties> &ndash;&gt;-->
    <!--  &lt;!&ndash; Needed for generate the report &ndash;&gt;-->
    <!--  <dependencies>-->
    <!--    <dependency>-->
    <!--      <groupId>br.usp.each.saeg</groupId>-->
    <!--      <artifactId>ba-dua-cli</artifactId>-->
    <!--      <version>${ba-dua.version}</version>-->
    <!--    </dependency>-->
    <!--  </dependencies>-->
    <!--  <build>-->
    <!--    <plugins>-->

    <!--      &lt;!&ndash; Copy ba-dua-agent-rt from .m2 directory to target/dependency &ndash;&gt;-->
    <!--      <plugin>-->
    <!--        <groupId>org.apache.maven.plugins</groupId>-->
    <!--        <artifactId>maven-dependency-plugin</artifactId>-->
    <!--        <version>2.10</version>-->
    <!--        <executions>-->
    <!--          <execution>-->
    <!--            <goals>-->
    <!--              <goal>copy</goal>-->
    <!--            </goals>-->
    <!--            <configuration>-->
    <!--              <artifactItems>-->
    <!--                <artifactItem>-->
    <!--                  <groupId>br.usp.each.saeg</groupId>-->
    <!--                  <artifactId>ba-dua-agent-rt</artifactId>-->
    <!--                  <classifier>all</classifier>-->
    <!--                  <version>${ba-dua.version}</version>-->
    <!--                </artifactItem>-->
    <!--              </artifactItems>-->
    <!--            </configuration>-->
    <!--          </execution>-->
    <!--        </executions>-->
    <!--      </plugin>-->

    <!--       &lt;!&ndash;Execute tests &ndash;&gt;-->
    <!--      <plugin>-->
    <!--        <groupId>org.apache.maven.plugins</groupId>-->
    <!--        <artifactId>maven-surefire-plugin</artifactId>-->
    <!--        <configuration>-->
    <!--          <argLine>-->
    <!--            &#45;&#45;add-opens java.base/java.lang=ALL-UNNAMED-->
    <!--            &#45;&#45;add-opens java.base/java.util=ALL-UNNAMED-->
    <!--            &#45;&#45;add-opens java.base/java.util.concurrent=ALL-UNNAMED-->
    <!--            -javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar-->
    <!--            -Doutput.file=target/badua.ser-->
    <!--          </argLine>-->
    <!--        </configuration>-->
    <!--      </plugin>-->




    <!--      &lt;!&ndash; Generate report in xml format &ndash;&gt;-->
    <!--      <plugin>-->
    <!--        <groupId>org.codehaus.mojo</groupId>-->
    <!--        <artifactId>exec-maven-plugin</artifactId>-->
    <!--        <version>1.5.0</version>-->
    <!--        <executions>-->
    <!--          <execution>-->
    <!--            <goals>-->
    <!--              <goal>java</goal>-->
    <!--            </goals>-->
    <!--            <phase>verify</phase>-->
    <!--            <configuration>-->
    <!--              <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>-->
    <!--              <arguments>-->
    <!--                <argument>-input</argument>-->
    <!--                <argument>${project.build.directory}/badua.ser</argument>-->
    <!--                <argument>-classes</argument>-->
    <!--                <argument>${project.build.outputDirectory}</argument>-->
    <!--                <argument>-show-classes</argument>-->
    <!--                <argument>-show-methods</argument>-->
    <!--                <argument>-xml</argument>-->
    <!--                <argument>${project.build.directory}/badua.xml</argument>-->
    <!--              </arguments>-->
    <!--            </configuration>-->
    <!--          </execution>-->
    <!--        </executions>-->
    <!--      </plugin>-->
    <!--    </plugins>-->
    <!--  </build>-->

    <!--</profile>-->
    <profile>
      <id>BaDua</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <argLine>
          --add-opens java.base/java.lang=ALL-UNNAMED
          --add-opens java.base/java.util=ALL-UNNAMED
          --add-opens java.base/sun.nio.ch=ALL-UNNAMED
          -javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar
          -Doutput.file=target/badua.ser
        </argLine>

      </properties>
      <dependencies>
        <dependency>
          <groupId>br.usp.each.saeg</groupId>
          <artifactId>ba-dua-cli</artifactId>
          <version>${ba-dua.version}</version>
        </dependency>
      </dependencies>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>2.10</version>
            <executions>
              <execution>
                <goals>
                  <goal>copy</goal>
                </goals>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <groupId>br.usp.each.saeg</groupId>
                      <artifactId>ba-dua-agent-rt</artifactId>
                      <classifier>all</classifier>
                      <version>${ba-dua.version}</version>
                    </artifactItem>
                  </artifactItems>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>
                --add-opens java.base/java.lang=ALL-UNNAMED
                --add-opens java.base/java.util=ALL-UNNAMED
                --add-opens java.base/sun.nio.ch=ALL-UNNAMED
                --add-opens java.base/jdk.internal.reflect=ALL-UNNAMED
                -javaagent:target/dependency/ba-dua-agent-rt-${ba-dua.version}-all.jar
                -Doutput.file=target/badua.ser
              </argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.5.0</version>
            <executions>
              <execution>
                <goals>
                  <goal>java</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <mainClass>br.usp.each.saeg.badua.cli.Report</mainClass>
                  <arguments>
                    <argument>-input</argument>
                    <argument>${project.build.directory}/badua.ser</argument>
                    <argument>-classes</argument>
                    <argument>${project.build.outputDirectory}</argument>
                    <argument>-show-classes</argument>
                    <argument>-show-methods</argument>
                    <argument>-xml</argument>
                    <argument>${project.build.directory}/badua.xml</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>


    <!-- PIT profile isw2-->
    <profile>
      <id>Pitest</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <withHistory>true</withHistory>
        <pitest.history.file>${project.build.directory}/pitest.history</pitest.history.file>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.pitest</groupId>
            <artifactId>pitest-maven</artifactId>
            <version>${pitest.version}</version>
            <configuration>
              <targetClasses>

              </targetClasses>
              <targetTests>

              </targetTests>
              <avoidCallsTo>
                <avoidCallsTo>org.slf4j</avoidCallsTo>
              </avoidCallsTo>
              <historyInputFile>${pitest.history.file}</historyInputFile>
              <historyOutputFile>${pitest.history.file}</historyOutputFile>
            </configuration>
            <executions>
              <execution>
                <id>PIT Report Generation</id>
                <phase>test-compile</phase>
                <goals>
                  <goal>mutationCoverage</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
